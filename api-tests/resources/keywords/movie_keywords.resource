*** Settings ***
Library    RequestsLibrary

*** Keywords ***

Criar um novo filme como admin
    [Documentation]    Envia uma requisi칞칚o POST /movies com dados v치lidos de um novo filme usando token de admin.

    ${headers}=    Create Dictionary    Authorization=${ADMIN_TOKEN}    Content-Type=application/json
    ${dados_filme}=    Create Dictionary
    ...    title=Revolutions
    ...    synopsis=Uma revolu칞칚o de m치quinas.
    ...    director=Lana Mendes
    ...    genres=["A칞칚o", "Fic칞칚o Cient칤fica"]
    ...    duration=129
    ...    classification=16
    ...    poster=revolu칞칚o3.jpg
    ...    releaseDate=2025-07-01
    Create Session    filmes    ${BASE_URL}
    ${response}=    POST On Session    filmes    /movies    headers=${headers}    json=${dados_filme}    expected_status=ANY

    Status Should Be    201    ${response}
    Dictionary Should Contain Key    ${response.json()}    data
    Should Be Equal As Strings    ${response.json()['data']['title']}    Revolutions

    Log    Filme criado com sucesso: ${response.json()['data']['title']}
    Set Test Variable    ${ID_FILME_CRIADO}    ${response.json()['data']['_id']}

Listar todos os filmes
    [Documentation]    Envia requisi칞칚o GET /movies sem autentica칞칚o e valida se a lista de filmes 칠 retornada com sucesso.

    Create Session    filmes    ${BASE_URL}
    ${response}=    GET On Session    filmes    /movies    expected_status=ANY

    Status Should Be    200    ${response}
    Dictionary Should Contain Key    ${response.json()}    data
    Should Be True    ${response.json()['count']} >= 0

    Log    游꿘 Total de filmes retornados: ${response.json()['count']}

Criar um novo filme como usu치rio comum
    [Documentation]    Tenta criar um filme com um usu치rio comum e valida se a resposta 칠 403 Forbidden.

    # Criar e autenticar usu치rio comum
    ${timestamp}=    Get Time    epoch
    ${email}=    Set Variable    user${timestamp}@teste.com
    ${senha}=    Set Variable    123456

    Create Session    user    ${BASE_URL}
    ${body}=    Create Dictionary
    ...    name=Usu치rio Comum
    ...    email=${email}
    ...    password=${senha}
    ${cadastro}=    POST On Session    user    /auth/register    json=${body}
    Should Be Equal As Integers    ${cadastro.status_code}    201

    ${login_data}=    Create Dictionary    email=${email}    password=${senha}
    ${login}=    POST On Session    user    /auth/login    json=${login_data}
    Should Be Equal As Integers    ${login.status_code}    200
    ${user_token}=    Set Variable    Bearer ${login.json()['data']['token']}
    ${user_id}=    Set Variable    ${login.json()['data']['_id']}

    # Tentar criar filme com token do usu치rio comum
    ${headers}=    Create Dictionary    Authorization=${user_token}    Content-Type=application/json
    ${dados_filme}=    Create Dictionary
    ...    title=Filme Inv치lido
    ...    synopsis=Tentativa de cria칞칚o por usu치rio comum.
    ...    director=Sem Autoriza칞칚o
    ...    genres=["Drama"]
    ...    duration=100
    ...    classification=12
    ...    poster=sem_autorizacao.jpg
    ...    releaseDate=2025-07-01

    ${response}=    POST On Session    user    /movies    headers=${headers}    json=${dados_filme}    expected_status=ANY
    Status Should Be    403    ${response}
    Log    Usu치rio comum n칚o tem permiss칚o para criar filmes (403 esperado)

    # Excluir usu치rio usando token de admin
    ${admin_headers}=    Create Dictionary    Authorization=${ADMIN_TOKEN}
    Create Session    admin_delete    ${BASE_URL}
    ${delete_response}=    DELETE On Session    admin_delete    /users/${user_id}    headers=${admin_headers}
    Status Should Be    200    ${delete_response}
    Log    Usu치rio comum deletado com sucesso ap칩s o teste
